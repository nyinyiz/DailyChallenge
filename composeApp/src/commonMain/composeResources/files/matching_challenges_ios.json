[
  {
    "question": "Match iOS design patterns with their purposes",
    "pairs": [
      {
        "left": "MVC",
        "right": "Model-View-Controller pattern"
      },
      {
        "left": "Delegate",
        "right": "Object communication pattern"
      },
      {
        "left": "Singleton",
        "right": "Single shared instance"
      },
      {
        "left": "Observer",
        "right": "Monitors object changes"
      }
    ],
    "difficulty": "Easy",
    "explanation": "iOS uses various design patterns to structure applications and manage object interactions."
  },
  {
    "question": "Match UIKit components with their functions",
    "pairs": [
      {
        "left": "UIViewController",
        "right": "Manages view hierarchy"
      },
      {
        "left": "UITableView",
        "right": "Displays scrollable list"
      },
      {
        "left": "UINavigationController",
        "right": "Manages navigation stack"
      },
      {
        "left": "UITabBarController",
        "right": "Manages tab-based interface"
      }
    ],
    "difficulty": "Easy",
    "explanation": "UIKit provides fundamental building blocks for iOS user interfaces."
  },
  {
    "question": "Match SwiftUI concepts with their descriptions",
    "pairs": [
      {
        "left": "View",
        "right": "Describes UI structure"
      },
      {
        "left": "@State",
        "right": "View-local state"
      },
      {
        "left": "@Binding",
        "right": "Two-way reference to state"
      },
      {
        "left": "@ObservedObject",
        "right": "External reference type state"
      }
    ],
    "difficulty": "Medium",
    "explanation": "SwiftUI uses declarative syntax with property wrappers for state management."
  },
  {
    "question": "Match storage options with their use cases",
    "pairs": [
      {
        "left": "UserDefaults",
        "right": "Small key-value data"
      },
      {
        "left": "Core Data",
        "right": "Object graph management"
      },
      {
        "left": "Keychain",
        "right": "Secure sensitive data"
      },
      {
        "left": "File Manager",
        "right": "File system access"
      }
    ],
    "difficulty": "Easy",
    "explanation": "iOS provides various storage mechanisms for different data types and security requirements."
  },
  {
    "question": "Match concurrency APIs with their purposes",
    "pairs": [
      {
        "left": "Grand Central Dispatch",
        "right": "Manages concurrent operations"
      },
      {
        "left": "OperationQueue",
        "right": "High-level task management"
      },
      {
        "left": "async/await",
        "right": "Structured concurrency"
      },
      {
        "left": "DispatchQueue.main",
        "right": "Main thread execution"
      }
    ],
    "difficulty": "Medium",
    "explanation": "iOS offers multiple concurrency APIs for different use cases and programming styles."
  },
  {
    "question": "Match lifecycle methods with their timing",
    "pairs": [
      {
        "left": "viewDidLoad",
        "right": "Called after view loads into memory"
      },
      {
        "left": "viewWillAppear",
        "right": "Called before view appears"
      },
      {
        "left": "viewDidAppear",
        "right": "Called after view appears"
      },
      {
        "left": "viewWillDisappear",
        "right": "Called before view disappears"
      }
    ],
    "difficulty": "Easy",
    "explanation": "Understanding view controller lifecycle is crucial for proper iOS app behavior."
  },
  {
    "question": "Match networking components with their roles",
    "pairs": [
      {
        "left": "URLSession",
        "right": "API for network requests"
      },
      {
        "left": "URLRequest",
        "right": "Encapsulates request details"
      },
      {
        "left": "URLResponse",
        "right": "Contains server response"
      },
      {
        "left": "Codable",
        "right": "JSON encoding/decoding"
      }
    ],
    "difficulty": "Medium",
    "explanation": "iOS networking stack provides comprehensive APIs for HTTP communication."
  },
  {
    "question": "Match Auto Layout concepts with their functions",
    "pairs": [
      {
        "left": "NSLayoutConstraint",
        "right": "Defines layout rules"
      },
      {
        "left": "Content Hugging",
        "right": "Resists growing"
      },
      {
        "left": "Compression Resistance",
        "right": "Resists shrinking"
      },
      {
        "left": "Intrinsic Content Size",
        "right": "Natural size of view"
      }
    ],
    "difficulty": "Hard",
    "explanation": "Auto Layout enables adaptive interfaces that work across different screen sizes."
  },
  {
    "question": "Match app states with their descriptions",
    "pairs": [
      {
        "left": "Not Running",
        "right": "App not launched or terminated"
      },
      {
        "left": "Active",
        "right": "App in foreground and receiving events"
      },
      {
        "left": "Background",
        "right": "App executing code but not visible"
      },
      {
        "left": "Suspended",
        "right": "App in memory but not executing"
      }
    ],
    "difficulty": "Easy",
    "explanation": "iOS apps transition through different states during their lifecycle."
  },
  {
    "question": "Match testing frameworks with their purposes",
    "pairs": [
      {
        "left": "XCTest",
        "right": "Unit and UI testing framework"
      },
      {
        "left": "XCTestExpectation",
        "right": "Tests asynchronous operations"
      },
      {
        "left": "XCUIApplication",
        "right": "Represents app under test"
      },
      {
        "left": "XCUIElement",
        "right": "Represents UI element"
      }
    ],
    "difficulty": "Medium",
    "explanation": "XCTest provides comprehensive testing capabilities for iOS applications."
  }
]